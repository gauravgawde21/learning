require 'spec_helper'
 
describe Book do
 
end

------------------------

before :each do
    @book = Book.new "Title", "Author", :category
end

-------------------------

describe "#new" do
    it "takes three parameters and returns a Book object" do
        @book.should be_an_instance_of Book
    end
end

-------------------------

class Book
 
end

-------------------------

describe "#title" do
    it "returns the correct title" do
        @book.title.should eql "Title"
    end
end
describe "#author" do
    it "returns the correct author" do
        @book.author.should eql "Author"
    end
end
describe "#category" do
    it "returns the correct category" do
        @book.category.should eql :category
    end
end

--------------------------

class Book
    attr_accessor :title, :author, :category
        def initialize title, author, category
            @title = title
            @author = author
            @category = category
        end
end

---------------------------

require 'spec_helper'
 
describe "Library object" do
 
    before :all do
        lib_obj = [
            Book.new("JavaScript: The Good Parts", "Douglas Crockford", :development),
            Book.new("Designing with Web Standards", "Jeffrey Zeldman", :design),
            Book.new("Don't Make me Think", "Steve Krug", :usability),
            Book.new("JavaScript Patterns", "Stoyan Stefanov", :development),
            Book.new("Responsive Web Design", "Ethan Marcotte", :design)
        ]
        File.open "books.yml", "w" do |f|
            f.write YAML::dump lib_obj
        end
    end
 
    before :each do
        @lib = Library.new "books.yml"
    end
 
end

---------------------------

describe "#new" do
 
    context "with no parameters" do
        it "has no books" do
            lib = Library.new
            lib.should have(0).books
        end
    end
    context "with a yaml file parameter" do
        it "has five books" do
            @lib.should have(5).books
        end
    end
end
 
it "returns all the books in a given category" do
    @lib.get_books_in_category(:development).length.should == 2
end
 
it "accepts new books" do
    @lib.add_book( Book.new("Designing for the Web", "Mark Boulton", :design) )
    @lib.get_book("Designing for the Web").should be_an_instance_of Book
end
 
it "saves the library" do
    books = @lib.books.map { |book| book.title }
    @lib.save
    lib2 = Library.new "books.yml"
    books2 = lib2.books.map { |book| book.title }
    books.should eql books2
end

-------------------------------

class Library
    attr_accessor :books
 
    def initialize lib_file = false
        @lib_file = lib_file
        @books = @lib_file ? YAML::load(File.read(@lib_file)) : []
    end
 
    def get_books_in_category category
        @books.select do |book|
            book.category == category
        end
    end
 
    def add_book book
        @books.push book
    end
 
    def get_book title
        @books.select do |book|
            book.title == title
        end.first
    end
 
    def save lib_file = false
        @lib_file = lib_file || @lib_file || "library.yml"
        File.open @lib_file, "w" do |f|
            f.write YAML::dump @books
        end
    end
end

----------------------------------


